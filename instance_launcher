<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Launches EC2 Instance</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>Name</name>
          <description>ex: awslpweb01 for an aws linux prod web server
</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>OS</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>Amazon</string>
              <string>Windows</string>
              <string>Ubuntu</string>
              <string>Centos</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Instance_Type</name>
          <description>Instance Size - for more information please refer to https://aws.amazon.com/ec2/instance-types/</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>t2.small</string>
              <string>t2.medium</string>
              <string>m1.small</string>
              <string>m1.medium</string>
              <string>m1.large</string>
              <string>m1.xlarge</string>
              <string>m3.medium</string>
              <string>m3.large</string>
              <string>m3.xlarge</string>
              <string>m3.2xlarge</string>
              <string>m4.large</string>
              <string>m4.xlarge</string>
              <string>m4.2xlarge</string>
              <string>m4.4xlarge</string>
              <string>m4.10xlarge</string>
              <string># compute optimized</string>
              <string>c3.large</string>
              <string>c3.xlarge</string>
              <string>c3.2xlarge</string>
              <string>c3.4xlarge</string>
              <string>c3.8xlarge</string>
              <string>c4.large</string>
              <string>c4.xlarge</string>
              <string>c4.2large</string>
              <string>c4.4xlarge</string>
              <string>c4.8large</string>
              <string># memory optimized</string>
              <string>m2.xlarge</string>
              <string>m2.2xlarge</string>
              <string>m2.4xlarge</string>
              <string>r3.large</string>
              <string>r3.xlarge</string>
              <string>r3.2xlarge</string>
              <string>r3.4xlarge</string>
              <string>r3.8xlarge</string>
              <string># storage optimized</string>
              <string>hi1.4xlarge</string>
              <string>hs1.8xlarge</string>
              <string>i2.xlarge</string>
              <string>i2.2xlarge</string>
              <string>i2.4xlarge</string>
              <string>i2.8xlarge</string>
              <string>d2.xlarge</string>
              <string>d2.2xlarge</string>
              <string>d2.4xlarge</string>
              <string>d2.8xlarge</string>
              <string># micro instances</string>
              <string>t1.micro</string>
              <string>t2.micro</string>
              <string>t2.nano</string>
              <string># gpu instances</string>
              <string>cg1.4xlarge</string>
              <string>g2.2xlarge</string>
              <string>g2.8xlarge</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Environment</name>
          <description>Delphic Environment</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>dev</string>
              <string>qa</string>
              <string>prod</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Region</name>
          <description>Location to Launch</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>us-east-1</string>
              <string>us-west-1</string>
              <string>us-west-2</string>
              <string>eu-west-1</string>
              <string>eu-central-1</string>
              <string>ap-southeast-1</string>
              <string>ap-southeast-2</string>
              <string>ap-northeast-1</string>
              <string>sa-east-1</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>AZ</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>b</string>
              <string>a</string>
              <string>c</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Security_Group</name>
          <description>Security Group Choices - Needs Constant Updating</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>DEV</string>
              <string>PRD</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>EBS_Size</name>
          <description>Size of ebs volume</description>
          <defaultValue>20</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Subnet</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>Private</string>
              <string>Public</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>IAM_Profile</name>
          <description>IAM instance profile attachment</description>
          <defaultValue>default</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>FQDN</name>
          <description>ex: test.test.com</description>
          <defaultValue>test.test.com</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>Run_List</name>
          <description>Chef Run List</description>
          <defaultValue>role[test]</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>Purge_Date</name>
          <description>Date for instance termination - if no date leave blank. format DD/MM/YY
ex: 12-25-16, if you&apos;d like a shorter time span, 24h will purge nightly.</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.3">
      <condition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>$OS</arg1>
        <arg2>Amazon</arg2>
        <ignoreCase>false</ignoreCase>
      </condition>
      <buildStep class="hudson.tasks.Shell">
        <command>#!/bin/bash

AMI=&quot;ami-08111162&quot;

echo $Instance_Type

if   [ $Subnet = &quot;Public&quot; ]
then
	Subnet=&apos;subnet-XXXXXXXX&apos;
elif [ $Subnet = &quot;Private&quot; ]
then
	Subnet=&apos;subnet-XXXXXXXX&apos;
fi

if   [ $IAM_Profile = &quot;&quot; ]
then
	IAM_Profile=&quot;default&quot;
fi

if   [ $Security_Group = &quot;DEV&quot; ]
then
	Security_Group=&apos;sg-XXXXXXXX&apos;
elif [ $Security_Group = &quot;Wordpress&quot; ]
then
	Security_Group=&apos;sg-XXXXXXXX&apos;
fi

chef exec knife ec2 server create -v

echo &quot;##################################################################################################&quot;
echo &quot;Launching a(n) $OS instance in $Region$AZ with a $EBS_Size volume - will run $Run_List from chef!!&quot;
echo &quot;##################################################################################################&quot;

sleep 5

# Launch
chef exec knife ec2 server create                                \
	-x                         &apos;ec2-user&apos;                \
	-i                         ~/.ssh/YOUR_PEM.pem                 \
	--secret-file              ~/.ssh/YOURPEM.pem                  \ 
	--bootstrap-version        12.5.1                              \
	--availability-zone        &quot;$Region$AZ&quot;              \
	--flavor                   &quot;$Instance_Type&quot;          \
	--ebs-size                 &quot;$EBS_Size&quot;               \
	--ebs-volume-type          &quot;gp2&quot;                     \
	--image                    &quot;$AMI&quot;                    \
	--ssh-key                  &quot;YOUR_SSH_FILE&quot;           \
	--region                   &quot;$Region&quot;                 \
	--iam-profile              &quot;$IAM_Profile&quot;            \
	--security-group-ids       &quot;$Security_Group&quot;         \
	--subnet                   &quot;$Subnet&quot;                 \
	--tags                     &quot;Name=$Name,Run List=$Run_List,Client=$Client,Environment=$Environment,OS=$OS,Purge=$Purge_Date&quot; \
	--environment              &quot;$Environment&quot;            \
	--fqdn                     &quot;$FQDN&quot;                   \
	--run-list                 &quot;$Run_List&quot;               \
	#{&quot;--json-attributes &apos;{ \&quot;#{instance[:apps].downcase}\&quot;: { \&quot;hostname\&quot;: \&quot;#{instance[:hn]}\&quot; } }&apos;&quot; if json_bool}&quot;</command>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
